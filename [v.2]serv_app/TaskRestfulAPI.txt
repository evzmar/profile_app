Набросок RESTFull API для  аутентификации 

Основные источники инфы:
https://stackoverflow.com/questions/4608225/how-do-i-implement-login-in-a-restful-web-service
https://blog.mwaysolutions.com/2014/06/05/10-best-practices-for-better-restful-api/

//----------------------------
* Запрос на создание (регистрацию) нового юзера:
POST [host:port]/api/v1/users
тело запроса (json-объект) 
{
  userAccountName:foo, // уникальное имя эккаунта
  pass:bar      // пароль
  email: 'ss@aa.ru'
}
тело ответа (json-объект):
- в случае удачи (201 – OK – New resource has been created):
{
   href: api/v1/users/<имя экаунта>  //ссылка на ресурс (страницу) созданного  юзера
}
- в случае неудачи
{
   errors: [{"userMessage": <сообщение для юзера>,
	         "internalMessage": <сообщение для программиста>,
	         "code": <код ошибки для программиста>,
             "more info": <доп. инфа> }]
}
//----------------------------
* Запрос на загрузку даных пользователя:
GET [host:port]/api/v1/users/<имя экаунта>
тело ответа (json-объект):
- в случае удачи (200 – OK – Eyerything is working):
{
  userData:{
            fullName:   '<full name>',
            phoneNumber:'<phone number>'}
}
- в случае неудачи:
см. выше
//----------------------------
* Запрос на создание токена авторизации полного доступа существующего юзера:
POST [host:port]/api/v1/users/<имя экаунта>/auth-tokens
{
  pass:bar // пароль
}

тело ответа (json-объект):
- в случае удачи (201 – OK – New resource has been created):
{
   tokenValue': <значение токена> // значение токена
}
- в случае неудачи:
см. выше
//----------------------------
* Запрос на изменение данных пользователя (допускается только с токеном авторизации, передаваемом в хидере Autorization)
PUT [host:port]/api/v1/users/<имя экаунта>
тело запроса (json-объект):
{
	fullName:   '<full name>',  // [не обязательное - если отсутствует, то соответсвующие данные не будут изменены]
    phoneNumber:'<phone number>'// [не обязательное - если отсутствует, то соответсвующее значение не будет изменено]
} 
тело ответа (json-объект):
- в случае удачи (200 – OK – Eyerything is working):
{
    fullName:   '<full name>',  // [не обязательное - если отсутствует, то соответсвующие данные не были изменены]
    phoneNumber:'<phone number>'// [не обязательное - если отсутствует, то соответсвующее значение не были изменены]
}
- в случае неудачи:
см. выше
//----------------------------


С учетом этого API тогда стандартные операции работы сводятся к следующим:

- регистрация юзера сводится к отправке запроса на создание (регистрацию) нового юзера;
- авторизация юзера сводится к отправке запроса на создание токена авторизации существующего юзера и сохранение самого значения токена (именно налиие этого значения говорит о том, что пользователь авторизован);
- проверка актуальности авторизованности (токена авторизации) сводится к отправке, например, запроса на изменение чего-то с пустыми данными (в этом случае это будет фиктивная попытка изменения)
- редактирвоание данных сволится к посылке запроса на изменение данных пользователя с токеном в хидере Authorization запроса;
- разавторизация сводится к удалению сведений о токене. 
